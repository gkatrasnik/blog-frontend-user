{"version":3,"sources":["components/Post.js","components/PostsList.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","useState","showCommentForm","setShowCommentForm","commentAuthor","setCommentAuthor","commentContent","setCommentContent","comments","item","Card","style","width","maxWidth","margin","Body","Title","className","title","Subtitle","user","username","Text","content","map","comment","index","author","Button","variant","onClick","Form","onSubmit","event","preventDefault","postId","_id","axios","post","then","response","getPostsData","error","console","log","alert","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","PostsList","postsList","setPostsList","loading","setLoading","useEffect","get","data","catch","err","textAlign","marginTop","padding","App","Container","fluid","Navbar","borderBottom","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75377a86.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction Post(props) {\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [commentAuthor, setCommentAuthor] = useState(\"\");\n  const [commentContent, setCommentContent] = useState(\"\");\n\n  let comments = props.item.comments;\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (!commentAuthor || !commentContent) {\n      alert(\"Author or Comment can not be empty!\");\n      return;\n    }\n    var postId = props.item._id;\n    //----------------------------------------------------- use axios\n    axios\n      .post(`/api/posts/${postId}/comments/`, {\n        author: commentAuthor,\n        content: commentContent,\n      })\n      .then(\n        (response) => {\n          setCommentAuthor(\"\");\n          setCommentContent(\"\");\n          setShowCommentForm(!showCommentForm);\n          props.getPostsData();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  return (\n    <Card style={{ width: \"80%\", maxWidth: \"32rem\", margin: \"20px\" }}>\n      <Card.Body>\n        <Card.Title className=\"text-center\">{props.item.title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Author: {props.item.user.username}\n        </Card.Subtitle>\n        <Card.Text>{props.item.content}</Card.Text>\n        <br />\n        <Card.Text>Comments:</Card.Text>\n\n        {comments.map((comment, index) => {\n          return (\n            <Card.Text comment={comment} key={index}>\n              {comment.author}: {comment.title}\n              {comment.content}\n            </Card.Text>\n          );\n        })}\n        <Button\n          variant=\"primary\"\n          className=\"float-end, my-2\"\n          onClick={() => {\n            setShowCommentForm(!showCommentForm);\n          }}\n        >\n          Comment\n        </Button>\n        {showCommentForm && (\n          <Form onSubmit={submitHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"author\">\n              <Form.Label>Author</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"enter your nickname\"\n                value={commentAuthor}\n                onChange={(e) => {\n                  setCommentAuthor(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"content\">\n              <Form.Label>Text</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type your comment\"\n                value={commentContent}\n                onChange={(e) => {\n                  setCommentContent(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport axios from \"axios\";\n\nfunction PostsList(props) {\n  const [postsList, setPostsList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getPostsData();\n  }, []);\n\n  const getPostsData = () => {\n    setLoading(true);\n    axios\n      .get(\"/api/posts\")\n      .then((response) => {\n        setPostsList(response.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      {loading && (\n        <h2 style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n          \"Loading Posts...\"\n        </h2>\n      )}\n      <ul style={{ padding: 0 }}>\n        {postsList.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className=\"d-flex flex-direction-column justify-content-center\"\n            >\n              <Post getPostsData={getPostsData} item={item} index={index} />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default PostsList;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport PostsList from \"./components/PostsList\";\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Navbar style={{ borderBottom: \"1px solid black\" }}>\n        <Container>\n          <Navbar.Brand>\n            <h3>My Blog</h3>\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <PostsList />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://obscure-temple-20965.herokuapp.com\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}